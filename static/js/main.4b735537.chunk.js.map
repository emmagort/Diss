{"version":3,"sources":["pages/Home.js","pages/Results.js","pages/Student.js","pages/Teacher.js","App.js","reportWebVitals.js","index.js"],"names":["Home","React","createElement","Results","_ref","questions","loaded","setLoaded","useState","overallScore","setOverallScore","totalPoints","reduce","total","question","answers","length","navigate","useNavigate","showResults","setShowResults","calculateOverallScore","score","useEffect","localStorage","getItem","Fragment","hidden","onClick","setItem","window","location","reload","resetQuestions","map","graded","showingSolution","edited","render","studentAnswer","changes","JSON","stringify","state","Student","useLocation","answer","highlightColor","setHighlightColor","setQuestions","parse","setChanges","currentQuestionIndex","setCurrentQuestionIndex","boxes","setBoxes","setRender","storedChanges","handleBeforeUnload","event","preventDefault","returnValue","addEventListener","handleBox","removeEventListener","currentQuestion","container","document","getElementById","style","position","prevQuestions","selection","getSelection","toString","trim","text","rangeCount","range","getRangeAt","rect","getBoundingClientRect","startRange","createRange","setStart","startContainer","startOffset","setEnd","startRect","newNode","className","containerRect","left","top","concat","width","right","height","border","pointerEvents","appendChild","newChange","type","color","content","updatedQuestions","innerHTML","console","log","handleHighlight","mark","endContainer","endOffset","backgroundColor","prevColor","extractContents","insertNode","empty","removeAllRanges","handleClickWord","caretRangeFromPoint","clientX","clientY","addRange","modify","span","createTextNode","deleteContents","handleClickLine","title","id","onMouseUp","whiteSpace","fontFamily","dangerouslySetInnerHTML","__html","alignItems","marginTop","ans","replace","forEach","change","includes","disabled","questionContent","showAnswer","solution","showSolution","removeItem","prevIndex","index","key","value","checked","onChange","e","target","display","every","pathname","some","Teacher","_localStorage$getItem","setTitle","setContent","setSolution","setAnswers","split","newAnswer","setNewAnswer","newQuestion","setNewQuestion","points","editingIndex","setEditingIndex","selectedQuestionIndex","setSelectedQuestionIndex","filename","setFilename","handleExport","exportedQuestions","blob","Blob","url","URL","createObjectURL","link","href","download","click","revokeObjectURL","remove","handleInputChange","name","[object Object]","paddingLeft","handleTitleClick","join","filter","i","handleDeleteQuestion","_","handleEditQestion","alert","placeholder","marginRight","handleAnswerChange","newAnswers","handleAddAnswer","nonEmptyAnswers","newQuestions","splice","confirm","file","files","reader","FileReader","onload","importedQuestions","result","allQuestions","missingFields","warn","readAsText","handleSave","handleSaveAs","newFilename","prompt","App","HashRouter","basename","Routes","Route","element","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode"],"mappings":"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","file":"static/js/main.4b735537.chunk.js","sourcesContent":["//import button from '../components/Button';\r\nimport React from 'react'\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n        <h1>Welcome to my app!</h1>\r\n        </div>\r\n    );\r\n    }","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport 'prismjs/themes/prism.css';\r\nimport './Teacher.css';\r\n\r\nconst Results = ({ questions }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [overallScore, setOverallScore] = useState(0); // Add state for overall score\r\n  const totalPoints = questions.reduce((total, question) => total + question.answers.length, 0);\r\n  const navigate = useNavigate();\r\n  const [showResults, setShowResults] = useState(false); // Add this line\r\n\r\n  useEffect(() => {\r\n    setLoaded(true);\r\n    calculateOverallScore(); // Calculate the initial overall score\r\n    const showResultsFromStorage = localStorage.getItem('showResults'); // Get showResults from local storage\r\n    if (showResultsFromStorage === 'true') {\r\n      setShowResults(true); // If showResults is true in local storage, set the state to true\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    calculateOverallScore(); // Recalculate the overall score whenever questions change\r\n  }, [questions]);\r\n\r\n  function calculateOverallScore() {\r\n    const score = questions.reduce((total, question) => total + question.score, 0);\r\n    setOverallScore(score);\r\n  }\r\n\r\n  \r\n    function handleShowScore() {\r\n      setShowResults(true); // Add this line\r\n      localStorage.setItem('showResults', 'true');\r\n      window.location.reload();\r\n      \r\n    }\r\n  \r\n\r\n\r\n\r\n  function handleReset() {\r\n    const resetQuestions = questions.map(question => ({\r\n      ...question,\r\n      graded: false,\r\n      showingSolution: false,\r\n      edited: false,\r\n      render: '',\r\n      studentAnswer: '',\r\n      changes: [],\r\n      score: 0\r\n\r\n    }));\r\n    localStorage.setItem('showResults', 'false');\r\n    localStorage.setItem('questions', JSON.stringify(resetQuestions));\r\n    navigate('/student', { state: { questions: resetQuestions } });\r\n    //window.location.href = '/#/student';\r\n\r\n  }\r\n  \r\n\r\n  function handleReview() {\r\n    navigate('/student', { state: { questions } });\r\n  }\r\n\r\n  // function handleShowScore() {\r\n  //   window.refresh();\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {loaded && (\r\n        <>\r\n          <h1>Results</h1>\r\n          <p hidden={!showResults}>Your overall grade: {overallScore}/{totalPoints}</p>\r\n          <button hidden = {showResults} onClick={handleShowScore}>Show Results</button>\r\n          <div hidden = {!showResults}>\r\n          <button onClick={handleReset}>Retake Quiz</button>\r\n          <button onClick={handleReview}>Review</button>\r\n          </div>\r\n  \r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect, } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport 'prismjs/themes/prism.css';\r\nimport './Student.css';\r\nimport './Teacher.css';\r\nimport Results from './Results';\r\n\r\nexport default function Student() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { answer } = location.state;\r\n  const [highlightColor, setHighlightColor] = useState('#FDDF7E');\r\n  const [questions, setQuestions] = useState(JSON.parse(localStorage.getItem('questions')) || []);\r\n  const colors = ['#CE97FB', '#F6A5EB', '#FAA99D', '#FDDF7E', '#9BFBE1', '#67EBFA'];\r\n  const [changes, setChanges] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [boxes, setBoxes] = useState([]);\r\n  const [render, setRender] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('questions', JSON.stringify(questions));\r\n  }, [questions]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('changes', JSON.stringify(changes));\r\n  }, [changes]);\r\n\r\n  useEffect(() => {\r\n    const storedChanges = JSON.parse(localStorage.getItem('changes')) || [];\r\n    setChanges(storedChanges);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (event) => {\r\n      event.preventDefault();\r\n      event.returnValue = 'Your boxes may appear in the wrong place if you reload this page.';\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      handleBox();\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, []);\r\n  \r\n\r\n  function goToNextQuestion() {\r\n    console.log('Hello world!');\r\n    if (currentQuestionIndex === questions.length - 1) {\r\n      return;\r\n    }\r\n    setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n  }\r\n\r\n  function handleSubmit() {\r\n    navigate('/results', { state: { questions } });\r\n    if (location.pathname === '/results') {\r\n      return <Results questions={location.state.questions} />;\r\n    }\r\n  }\r\n\r\n\r\n  function goToPreviousQuestion() {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  }\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  function handleBox() {\r\n    const container = document.getElementById('questionContent');\r\n    if (container !== null) {\r\n      container.style.position = 'relative';\r\n    }\r\n\r\n    const prevQuestions = [...questions];\r\n    if (currentQuestion.graded === true) {\r\n      return;\r\n    }\r\n    const selection = window.getSelection();\r\n    if (selection.toString().trim() !== '') {\r\n      const text = selection.toString();\r\n      if (selection.rangeCount > 0) {\r\n        const range = selection.getRangeAt(0);\r\n        const rect = range.getBoundingClientRect();\r\n\r\n        const startRange = document.createRange();\r\n        startRange.setStart(range.startContainer, range.startOffset);\r\n        startRange.setEnd(range.startContainer, range.startOffset + 1);\r\n        const startRect = startRange.getBoundingClientRect();\r\n\r\n        const newNode = document.createElement('div');\r\n        newNode.className = 'box';\r\n        newNode.style.position = 'absolute';\r\n        //newNode.style.position = 'relative';\r\n\r\n        // const container = document.getElementById('questionContent');\r\n        // container.style.position = 'relative';\r\n        const containerRect = container.getBoundingClientRect();\r\n        \r\n        const left = startRect.left - containerRect.left;;\r\n        //const top =   - rect.top - containerRect.top  ;\r\n        // const left = startRect.left - containerRect.left;\r\n        const top = rect.top - containerRect.top;\r\n\r\n        newNode.style.left = `${left - 5}px`;\r\n        newNode.style.top = `${top}px`;\r\n        const width = rect.right - startRect.left;\r\n        if (width === rect.width) {\r\n          newNode.style.width = `${width + 15}px`;\r\n        }\r\n        else {\r\n          newNode.style.width = `${width + 5}px`;\r\n        }\r\n        newNode.style.height = `${rect.height}px`;\r\n        newNode.style.border = `2px solid ${highlightColor}`;\r\n        newNode.style.pointerEvents = 'none';\r\n        const questionContainer = document.getElementById('questionContent');\r\n        questionContainer.appendChild(newNode);\r\n        const prevColor = highlightColor;\r\n      //   const boxes = JSON.parse(localStorage.getItem(`boxes-${currentQuestionIndex}`)) || [];\r\n      // boxes.push({ left: newNode.style.left, top: newNode.style.top, width: newNode.style.width, height: newNode.style.height, prevColor: prevColor });\r\n      // localStorage.setItem(`boxes-${currentQuestionIndex}`, JSON.stringify(boxes));\r\n\r\n        const newChange = { type: 'box', color: prevColor, content: text };\r\n        setQuestions(prevQuestions => {\r\n          const updatedQuestions = [...prevQuestions];\r\n          updatedQuestions[currentQuestionIndex] = {\r\n            ...currentQuestion,\r\n            changes: currentQuestion.changes ? [...currentQuestion.changes, newChange] : [newChange]\r\n          };\r\n          questions[currentQuestionIndex]['edited'] = true;\r\n          questions[currentQuestionIndex]['render'] = document.getElementById('questionContent').innerHTML;\r\n          console.log(document.getElementById('questionContent').innerHTML);\r\n          return updatedQuestions;\r\n        });\r\n      }\r\n    }\r\n    else {  \r\n      return prevQuestions;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  function handleHighlight() {\r\n    if (currentQuestion.graded === true) {\r\n      return;\r\n    }\r\n    const selection = window.getSelection();\r\n\r\n    if (selection.toString().trim() !== '') {\r\n      if (!selection.rangeCount) return;\r\n      const text = selection.toString();\r\n\r\n      let range = selection.getRangeAt(0);\r\n      let rangeData = {\r\n        startContainer: range.startContainer,\r\n        startOffset: range.startOffset,\r\n        endContainer: range.endContainer,\r\n        endOffset: range.endOffset\r\n      }\r\n\r\n      let mark = document.createElement('mark');\r\n      mark.style.backgroundColor = highlightColor;\r\n      const prevColor = mark.style.backgroundColor;\r\n      mark.appendChild(range.extractContents());\r\n      range.insertNode(mark);\r\n      const newChange = { type: 'highlight', color: prevColor, content: text };\r\n\r\n      // Update the currentQuestion with the new change\r\n      setQuestions(prevQuestions => {\r\n        const updatedQuestions = [...prevQuestions];\r\n        updatedQuestions[currentQuestionIndex] = {\r\n          ...currentQuestion,\r\n          changes: currentQuestion.changes ? [...currentQuestion.changes, newChange] : [newChange]\r\n        };\r\n        questions[currentQuestionIndex]['edited'] = true;\r\n        questions[currentQuestionIndex]['render'] = document.getElementById('questionContent').innerHTML;\r\n        console.log(document.getElementById('questionContent').innerHTML);\r\n        return updatedQuestions;\r\n      });\r\n\r\n      // Clear the selection\r\n      if (window.getSelection) {\r\n        if (window.getSelection().empty) {  \r\n          window.getSelection().empty();\r\n        } else if (window.getSelection().removeAllRanges) {  \r\n          window.getSelection().removeAllRanges();\r\n        }\r\n      } else if (document.selection) {  \r\n        document.selection.empty();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function handleClickWord(event) {\r\n\r\n    if (currentQuestion.graded === true) {\r\n      return;\r\n    }\r\n\r\n    const selection = window.getSelection();\r\n\r\n    const range = document.caretRangeFromPoint(event.clientX, event.clientY);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    selection.modify('move', 'backward', 'word');\r\n    selection.modify('extend', 'forward', 'word');\r\n\r\n    if (selection.toString().trim() !== '') {\r\n      const text = selection.toString();\r\n      const span = document.createElement('span');\r\n      span.style.border = `2px solid ${highlightColor}`;\r\n      const prevColor = highlightColor;\r\n      span.appendChild(document.createTextNode(selection.toString()));\r\n      selection.getRangeAt(0).deleteContents();\r\n      selection.getRangeAt(0).insertNode(span);\r\n      const newChange = { type: 'clickWord', color: prevColor, content: text };\r\n      setQuestions(prevQuestions => {\r\n        const updatedQuestions = [...prevQuestions];\r\n        updatedQuestions[currentQuestionIndex] = {\r\n          ...currentQuestion,\r\n          changes: currentQuestion.changes ? [...currentQuestion.changes, newChange] : [newChange]\r\n        };\r\n        questions[currentQuestionIndex]['edited'] = true;\r\n        questions[currentQuestionIndex]['render'] = document.getElementById('questionContent').innerHTML;\r\n        console.log(document.getElementById('questionContent').innerHTML);\r\n        return updatedQuestions;\r\n      });\r\n      // Clear the selection\r\n      if (window.getSelection) {\r\n        if (window.getSelection().empty) {  \r\n          window.getSelection().empty();\r\n        } else if (window.getSelection().removeAllRanges) {  \r\n          window.getSelection().removeAllRanges();\r\n        }\r\n      } else if (document.selection) {  \r\n        document.selection.empty();\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleClickLine(event) {\r\n    if (currentQuestion.graded === true) {\r\n      return;\r\n    }\r\n    const selection = window.getSelection();\r\n    const range = document.caretRangeFromPoint(event.clientX, event.clientY);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    selection.modify('move', 'backward', 'lineboundary');\r\n    selection.modify('extend', 'forward', 'lineboundary');\r\n\r\n    if (selection.toString().trim() !== '') {\r\n      const text = selection.toString();\r\n      const span = document.createElement('span');\r\n      span.style.border = `2px solid ${highlightColor}`;\r\n      const prevColor = highlightColor;\r\n      span.appendChild(document.createTextNode(selection.toString()));\r\n      selection.getRangeAt(0).deleteContents();\r\n      selection.getRangeAt(0).insertNode(span);\r\n      const newChange = { type: 'clickLine', color: prevColor, content: text };\r\n      setQuestions(prevQuestions => {\r\n        const updatedQuestions = [...prevQuestions];\r\n        updatedQuestions[currentQuestionIndex] = {\r\n          ...currentQuestion,\r\n          changes: currentQuestion.changes ? [...currentQuestion.changes, newChange] : [newChange]\r\n        };\r\n        questions[currentQuestionIndex]['render'] = document.getElementById('questionContent').innerHTML;\r\n        questions[currentQuestionIndex]['edited'] = true;\r\n        return updatedQuestions;\r\n\r\n      });\r\n\r\n      // Clear the selection\r\n      if (window.getSelection) {\r\n        if (window.getSelection().empty) {  \r\n          window.getSelection().empty();\r\n        } else if (window.getSelection().removeAllRanges) {  \r\n          window.getSelection().removeAllRanges();\r\n        }\r\n      } else if (document.selection) {  \r\n        document.selection.empty();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  function handleReset() {\r\n    document.getElementById('questionContent').innerHTML = questions[currentQuestionIndex].content;\r\n    questions[currentQuestionIndex]['render'] = '';\r\n    questions[currentQuestionIndex]['changes'] = [];\r\n    questions[currentQuestionIndex]['edited'] = false;\r\n    setQuestions(prevQuestions => [...prevQuestions]);\r\n\r\n    localStorage.removeItem(`boxes-${currentQuestionIndex}`);\r\n  }\r\n\r\n\r\n  function showSolution(currentQuestion, questionContent ) {\r\n    questionContent.innerHTML = currentQuestion.solution;\r\n    currentQuestion.showingSolution = true;\r\n  }\r\n\r\n  function showAnswer(currentQuestion, questionContent) {\r\n    questionContent.innerHTML = currentQuestion.studentAnswer;\r\n    currentQuestion.showingSolution = false;\r\n  }\r\n    \r\n\r\n  function handleChange(){\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    const studentAnswer = currentQuestion.studentAnswer;\r\n    const questionContent = document.getElementById('questionContent');\r\n    //const questionContent = document.getElementById('questionContent');\r\n    if (currentQuestion.showingSolution === true){\r\n      showAnswer(currentQuestion, questionContent);\r\n    }\r\n    else{\r\n      showSolution(currentQuestion, questionContent);\r\n    }\r\n  }\r\n  \r\n\r\n  function checkAnswer() {\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    const answers = (currentQuestion.answers || []).map(ans => ans.replace(/[\\s.,!?]/g, ''));\r\n    console.log(answers);\r\n    const changes = currentQuestion.changes;\r\n    console.log(changes);\r\n\r\n    let score = 0;\r\n    changes.forEach(change => {\r\n      console.log(change.content.replace(/[\\s.,!?]/g, ''));\r\n      if (answers.includes(change.content.replace(/[\\s.,!?]/g, ''))) {\r\n        score += 1;\r\n      } else {\r\n        score -= 0.5;\r\n      }\r\n    });\r\n\r\n    currentQuestion.score = score;\r\n    currentQuestion.graded = true;\r\n\r\n    console.log(score);\r\n    currentQuestion.studentAnswer = document.getElementById('questionContent').innerHTML;\r\n    setQuestions(prevQuestions => [...prevQuestions]); // Trigger re-render\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {questions.length === 0 ? (\r\n        <p>No questions have been created yet.</p>\r\n      ) : (\r\n      <div >\r\n        <div>\r\n          <h2 className='question-title' style={{position: 'sticky, top: 0'}}>{currentQuestion.title}</h2>\r\n          <div className='question-container'>\r\n          {currentQuestion.edited ? (\r\n            <p id=\"questionContent\" onMouseUp={\r\n              currentQuestion.style === 'highlight' ? handleHighlight :\r\n                currentQuestion.style === 'box' ? handleBox :\r\n                  currentQuestion.style === 'clickword' ? handleClickWord :\r\n                    handleClickLine\r\n            }\r\n              style={{ whiteSpace: 'pre-wrap', fontFamily: 'monospace', }}\r\n              dangerouslySetInnerHTML={{ __html: currentQuestion.render }}\r\n            />\r\n          ) : (\r\n            <p id=\"questionContent\" onMouseUp={\r\n              currentQuestion.style === 'highlight' ? handleHighlight :\r\n                currentQuestion.style === 'box' ? handleBox :\r\n                  currentQuestion.style === 'clickword' ? handleClickWord :\r\n                    handleClickLine\r\n            }\r\n              style={{ whiteSpace: 'pre-wrap', fontFamily: 'monospace', }}\r\n              dangerouslySetInnerHTML={{ __html: currentQuestion.content }}\r\n            />\r\n          )}\r\n          </div>\r\n        </div>\r\n        <p>Score: {currentQuestion.score}/{currentQuestion.answers.length}</p>\r\n        <div className=\"button-container\" style={{ alignItems: 'left' }}>\r\n        </div>\r\n        <div className=\"interaction-controls\">\r\n          <div style={{ marginTop: 'auto' }}>\r\n          <button className='inreractive-button' onClick={checkAnswer} disabled={currentQuestion.graded} hidden={!currentQuestion.edited||currentQuestion.graded}>Check Answer</button>\r\n          <button className='inreractive-button' onClick={handleChange} hidden={!currentQuestion.graded}>Question/Solution</button>\r\n          </div>\r\n          <div style={{ marginTop: 'auto' }}>\r\n            <button onClick={handleReset} hidden={currentQuestion.graded}>Reset All</button>\r\n          </div>\r\n          <div style={{ marginTop: 'auto' }}>\r\n            <button onClick={goToPreviousQuestion}disabled={currentQuestionIndex===0}>Previous Question</button>\r\n            <button onClick={goToNextQuestion}disabled={currentQuestionIndex===(questions.length-1)}>Next Question</button>\r\n            \r\n          </div>\r\n\r\n          <label className='color-selection'>\r\n            {colors.map((color, index) => (\r\n              <label key={index}>\r\n                <input type=\"radio\" value={color} checked={highlightColor === color} onChange={(e) => setHighlightColor(e.target.value)} />\r\n                <span\r\n                  style={{ backgroundColor: color, display: 'inline-block', width: '20px', height: '20px' }}\r\n                  className={highlightColor === color ? 'selected' : ''}\r\n                ></span>\r\n              </label>\r\n            ))}\r\n          </label>\r\n          {questions.every(question => question.changes && question.changes.length >= 1) && (\r\n        <button className=\"submit-button\" onClick={handleSubmit} disabled={questions.some(question => !question.graded)}>Submit</button>\r\n        )}\r\n        </div>\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport './Teacher.css';\r\nexport default function Teacher() {\r\n  const [title, setTitle] = useState(localStorage.getItem('title') || '');\r\n  const [content, setContent] = useState(localStorage.getItem('content') || '');\r\n  const [solution, setSolution] = useState(localStorage.getItem('solution') || '');\r\n  const [questions, setQuestions] = useState(JSON.parse(localStorage.getItem('questions')) || []);\r\n  const [answers, setAnswers] = useState(localStorage.getItem('answers')?.split(',') || ['']);\r\n  const [newAnswer, setNewAnswer] = useState('');\r\n  const [newQuestion, setNewQuestion] = useState({ style: '', title: '', content: '', answers:[''] , solution: '' , score: '', graded: false, showingSolution: false, changes: [], render: '', studentAnswer: '', edited: false, points: ''});\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n  const [selectedQuestionIndex, setSelectedQuestionIndex] = useState(null);\r\n  const [filename, setFilename] = useState('questions.txt');\r\n\r\n  const handleImport = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      const importedQuestions = JSON.parse(event.target.result);\r\n      const existingQuestions = JSON.parse(localStorage.getItem('questions')) || [];\r\n      const allQuestions = [...existingQuestions, ...importedQuestions];\r\n\r\n      const missingFields = allQuestions.filter(question => {\r\n        return !question.style || !question.title || !question.content || question.answers.length === 0 || !question.solution;\r\n      });\r\n\r\n      console.log(missingFields.length);\r\n\r\n      if (missingFields.length > 0) {\r\n        console.warn('Warning: Some questions in the imported file are missing fields.');\r\n        alert(\"Please make sure all the questions in your file have all fields filled in.\" );\r\n        return\r\n      }\r\n\r\n      setQuestions(allQuestions);\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    handleExport(filename);\r\n  };\r\n\r\n  const handleSaveAs = () => {\r\n    const newFilename = prompt('Enter new filename:');\r\n    if (newFilename) {\r\n      setFilename(newFilename);\r\n      handleExport(newFilename);\r\n    }\r\n  };\r\n\r\n\r\n  const handleExport = (filename) => {\r\n    const exportedQuestions = questions.map(question => {\r\n      const { style, title, content, answers, solution } = question;\r\n      return { style, title, content, answers, solution };\r\n    });\r\n\r\n    const content = JSON.stringify(exportedQuestions);\r\n    const blob = new Blob([content], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    link.click();\r\n\r\n    // Clean up\r\n    URL.revokeObjectURL(url);\r\n    link.remove();\r\n  };\r\n\r\n\r\n  const handleTitleClick = (index) => {\r\n    if (selectedQuestionIndex === index) {\r\n      setSelectedQuestionIndex(null);\r\n    } else {\r\n      setSelectedQuestionIndex(index);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('questions', JSON.stringify(questions));\r\n  }, [questions]);\r\n\r\n\r\n\r\n\r\n  function handleInputChange(e) {\r\n    let value = e.target.value;\r\n    if (e.target.name === 'answers') {\r\n      value = value.split(','); \r\n    }\r\n    setNewQuestion({ ...newQuestion, [e.target.name]: value });\r\n  }\r\n\r\n  const handleAnswerChange = (e, index) => {\r\n    const newAnswers = [...newQuestion.answers];\r\n    newAnswers[index] = e.target.value;\r\n    setNewQuestion({ ...newQuestion, answers: newAnswers });\r\n  };\r\n\r\n\r\n  const handleAddAnswer = () => {\r\n    setNewQuestion({ ...newQuestion, answers: [...newQuestion.answers, ''] });\r\n  };\r\n\r\n  function handleAddQuestion(e) {\r\n    // Filter out any empty answers\r\n    const nonEmptyAnswers = newQuestion.answers.filter(answer => answer.trim() !== '');\r\n\r\n    if (!newQuestion.style || !newQuestion.title || !newQuestion.content || nonEmptyAnswers.length === 0 || !newQuestion.solution) {\r\n      alert(\"Please fill in all the fields before adding a question.\");\r\n      return;\r\n    }\r\n\r\n    let newQuestions = [...questions];\r\n    if (editingIndex !== null) {\r\n      newQuestions.splice(editingIndex, 0, { ...newQuestion, answers: nonEmptyAnswers });\r\n      setQuestions(newQuestions);\r\n      setNewQuestion({ style: '', title: '', content: '', answers: [], solution: ''});\r\n      setEditingIndex(null);\r\n    }\r\n    else {\r\n      setQuestions([...questions, { ...newQuestion, answers: nonEmptyAnswers }]);\r\n    }\r\n    setAnswers([]);\r\n    setNewQuestion({ style: '', title: '', content: '', answers: [], solution: ''});\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('title', title);\r\n    localStorage.setItem('content', content);\r\n    localStorage.setItem('answers', answers);\r\n    localStorage.setItem('solution', solution);\r\n  }, [title, content, answers]);\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (questions.length === 0) {\r\n      alert(\"Please create at least one question before submitting.\");\r\n      return;\r\n    }\r\n    navigate('/student', { state: { title, content, answers, solution } });\r\n  }\r\n\r\n  function handleEditQestion(index) {\r\n    setNewQuestion(questions[index]);\r\n    setQuestions(questions.filter((_, i) => i !== index));\r\n    setEditingIndex(index);\r\n  }\r\n\r\n  function handleDeleteQuestion(index) {\r\n    setQuestions(questions.filter((question, i) => i !== index));\r\n  }\r\n\r\n  function handleDeleteAllQuestions() {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete all questions?\");\r\n    if (confirmDelete) {\r\n      setQuestions([]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ paddingLeft: '20px' }}>\r\n      <h1>Questions</h1>\r\n      {questions.map((question, index) => (\r\n        <div key={index}>\r\n          <h2 onClick={() => handleTitleClick(index)}>{question.title}</h2>\r\n          {selectedQuestionIndex === index && (\r\n            <>\r\n              <p style={{ fontFamily: 'monospace', whiteSpace: 'pre-wrap' }}>{question.content}</p>\r\n              <p>The answers are: {question.answers.join(', ')}</p>\r\n              <p>The style is: {question.style}</p>\r\n              <p>The solution is: {question.solution}</p>\r\n              <button onClick={() => handleDeleteQuestion(index)}>Delete Question</button>\r\n              <button onClick={() => handleEditQestion(index)}>Edit Question</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Preview</button>\r\n      <div>\r\n        <select name=\"style\" value={newQuestion.style} onChange={handleInputChange}>\r\n          <option value=\"\">Select style</option>\r\n          <option value=\"box\">Box</option>\r\n          <option value=\"highlight\">Highlight</option>\r\n          <option value=\"clickword\">Click Word</option>\r\n          <option value=\"clickline\">Click Line</option>\r\n        </select>\r\n        <input name=\"title\" value={newQuestion.title} onChange={handleInputChange} placeholder=\"Question\" />\r\n        <textarea name=\"content\" value={newQuestion.content} onChange={handleInputChange} style={{ whiteSpace: 'pre-wrap' }} placeholder=\"Content\" />\r\n        {newQuestion.answers.map((answer, index) => (\r\n          <div key={index} style={{ display: 'flex', alignItems: 'center' }}>\r\n          {!newQuestion.content.includes(answer) && <span style={{ color: 'red', marginRight: '5px'}} title=\"This answer is not contained in the question content.\">❗</span>}\r\n          <textarea\r\n            style={{ whiteSpace: 'pre-wrap' }}\r\n            key={index}\r\n            name=\"answers\"\r\n            value={answer}\r\n            onChange={(e) => handleAnswerChange(e, index)}\r\n            placeholder=\"New Answer\"\r\n          />\r\n          </div>\r\n        ))}\r\n        <button onClick={handleAddAnswer}>Add another answer</button>\r\n        <textarea name=\"solution\" value={newQuestion.solution} onChange={handleInputChange} style={{ whiteSpace: 'pre-wrap' }} placeholder=\"Feedback\" />\r\n        {/* <input name=\"points\" value={newQuestion.points} onChange={handleInputChange} placeholder=\"Points\" /> */}\r\n        <button onClick={handleAddQuestion}>{editingIndex !== null ? 'Update Question' : 'Add Question'}</button>\r\n        <button onClick={handleDeleteAllQuestions}>Delete All Questions</button>\r\n      </div>\r\n      <div>\r\n        <input type=\"file\" onChange={handleImport} />\r\n      </div>\r\n      <div>\r\n        <button onClick={handleSave}>Save</button>\r\n        <button onClick={handleSaveAs}>Save As</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","// app.js\nimport React from 'react'\n// import ReactDOM from 'react-dom'\nimport ReactDOM from 'react-dom/client';\n//import { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Student from './pages/Student';\nimport NoPage from './pages/NoPage';\nimport Index from './pages/Index';\nimport Teacher from './pages/Teacher';\nimport Results from './pages/Results';\n\n// export default function App() {\n//   const qeuestions = JSON.parse(localStorage.getItem('questions')) || [];\n//   return (\n//     <BrowserRouter basename={process.env.PUBLIC_URL}>\n//       <Routes>\n//           <Route index element={<Index />} />\n//           <Route path=\"/home\" element={<Home />} />\n//           <Route path=\"/student\" element={<Student />} />\n//           <Route path=\"/teacher\" element={<Teacher />} />\n//           <Route path=\"/results\" element={<Results questions={qeuestions} />} />\n//           {/* <Route path=\"*\" element={<NoPage />} /> */}\n//       </Routes>\n//     </BrowserRouter>\n//   );\n// }\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(<App />);\n\n\n//Trying a new solution\n\nimport { HashRouter, Routes, Route } from 'react-router-dom';\n\nexport default function App() {\n  const questions = JSON.parse(localStorage.getItem('questions')) || [];\n  return (\n    <HashRouter basename='/'>\n      <Routes>\n          <Route index element={<Teacher />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/student\" element={<Student />} />\n          <Route path=\"/teacher\" element={<Teacher />} />\n          <Route path=\"/results\" element={<Results questions={questions} />} />\n          {/* <Route path=\"*\" element={<NoPage />} /> */}\n      </Routes>\n    </HashRouter>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}