{"version":3,"sources":["pages/Home.js","pages/Results.js","pages/Student.js","pages/NoPage.js","pages/Teacher.js","pages/Index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","React","createElement","Results","_ref","questions","overallScore","reduce","total","question","score","totalPoints","answers","length","navigate","useNavigate","onClick","updatedQuestions","map","graded","showingSolution","edited","render","studentAnswer","changes","state","Student","location","useLocation","answer","highlightColor","setHighlightColor","useState","setQuestions","JSON","parse","localStorage","getItem","setChanges","currentQuestionIndex","setCurrentQuestionIndex","useEffect","setItem","stringify","storedChanges","currentQuestion","handleBox","selection","window","getSelection","toString","trim","text","rangeCount","range","getRangeAt","rect","getBoundingClientRect","startRange","document","createRange","setStart","startContainer","startOffset","setEnd","startRect","newNode","className","style","position","container","getElementById","containerRect","left","top","concat","width","right","height","border","pointerEvents","appendChild","newChange","type","color","content","prevQuestions","innerHTML","console","log","handleHighlight","mark","endContainer","endOffset","backgroundColor","prevColor","extractContents","insertNode","empty","removeAllRanges","handleClickWord","event","caretRangeFromPoint","clientX","clientY","addRange","modify","span","createTextNode","deleteContents","handleClickLine","title","id","onMouseUp","whiteSpace","fontFamily","dangerouslySetInnerHTML","__html","alignItems","marginTop","ans","replace","forEach","change","includes","disabled","hidden","questionContent","showAnswer","solution","showSolution","prevIndex","index","key","value","checked","onChange","e","target","display","every","pathname","NoPage","Teacher","_localStorage$getItem","setTitle","setContent","setSolution","setAnswers","split","newAnswer","setNewAnswer","newQuestion","setNewQuestion","points","editingIndex","setEditingIndex","selectedQuestionIndex","setSelectedQuestionIndex","filename","setFilename","handleExport","exportedQuestions","blob","Blob","url","URL","createObjectURL","link","href","download","click","revokeObjectURL","remove","handleInputChange","name","[object Object]","paddingLeft","handleTitleClick","Fragment","join","filter","i","handleDeleteQuestion","_","handleEditQestion","preventDefault","alert","placeholder","handleAnswerChange","newAnswers","handleAddAnswer","nonEmptyAnswers","newQuestions","splice","confirm","file","files","reader","FileReader","onload","importedQuestions","result","allQuestions","missingFields","warn","readAsText","handleSave","handleSaveAs","newFilename","prompt","Index","App","qeuestions","BrowserRouter","Routes","Route","element","path","ReactDOM","createRoot","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.b5d40a3a.chunk.js","sourcesContent":["//import button from '../components/Button';\r\nimport React from 'react'\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n        <h1>Welcome to my app!</h1>\r\n        </div>\r\n    );\r\n    }","// Results.js\r\nimport React, { useState, useEffect, } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport 'prismjs/themes/prism.css';\r\nimport './Student.css';\r\nimport './Teacher.css';\r\n\r\nconst Results = ({ questions }) => {\r\n  // Calculate the overall grade based on your scoring logic\r\n  const overallScore = questions.reduce((total, question) => total + question.score, 0);\r\n  const totalPoints = questions.reduce((total, question) => total + question.answers.length, 0);\r\n  const navigate = useNavigate();\r\n\r\n  function handleReset() {\r\n    // Reset the state of the quiz\r\n    // for each question, set the selected studentAnswer and changes to null\r\n    const updatedQuestions = questions.map(question => ({\r\n      ...question,\r\n      graded: false,\r\n      showingSolution: false,\r\n      edited: false,\r\n      render : '',\r\n      studentAnswer: '',\r\n      changes: [],\r\n      score: 0\r\n    }));\r\n\r\n    navigate('/student', { state: { questions: updatedQuestions } });\r\n    \r\n  }\r\n\r\n  function handleReview() {\r\n    //redirect to the student page without making any changes\r\n    navigate('/student', { state: { questions } });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Results</h1>\r\n      <p>Your overall grade: {overallScore}/{totalPoints}</p>\r\n      <button onClick={handleReset}>Retake Quiz</button>\r\n      <button onClick={handleReview}>Review</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect, } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport 'prismjs/themes/prism.css';\r\nimport './Student.css';\r\nimport './Teacher.css';\r\nimport Results from './Results';\r\n\r\nexport default function Student() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { answer } = location.state;\r\n  const [highlightColor, setHighlightColor] = useState('#FDDF7E');\r\n  const [questions, setQuestions] = useState(JSON.parse(localStorage.getItem('questions')) || []);\r\n  const colors = ['#CE97FB', '#F6A5EB', '#FAA99D', '#FDDF7E', '#9BFBE1', '#67EBFA'];\r\n  const [changes, setChanges] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\r\n  // const newNode = useRef(null);\r\n  // useEffect(() => {\r\n  //   const handleResize = () => {\r\n  //     // Update the position of the box based on the new window dimensions\r\n  //     if (newNode.current) {\r\n  //     const updatedRect = newNode.getBoundingClientRect();\r\n  //     newNode.style.left = `${updatedRect.left - 5}px`;\r\n  //     newNode.style.top = `${updatedRect.top}px`;\r\n  //     }\r\n  //   };\r\n\r\n  //   window.addEventListener('resize', handleResize);\r\n\r\n  //   return () => {\r\n  //     // Clean up the event listener when the component unmounts\r\n  //     window.removeEventListener('resize', handleResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('questions', JSON.stringify(questions));\r\n  }, [questions]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('changes', JSON.stringify(changes));\r\n  }, [changes]);\r\n\r\n  useEffect(() => {\r\n    const storedChanges = JSON.parse(localStorage.getItem('changes')) || [];\r\n    setChanges(storedChanges);\r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  // useEffect(() => {\r\n  //   // Get the undo button\r\n  //   const undoButton = document.getElementById('undoButton');\r\n\r\n  //   // Get the changes for the current page\r\n  //   const currentPageChanges = changes.filaater(change => change.index === currentQuestionIndex);\r\n\r\n  //   // Disable the undo button if there are no changes for the current page, enable it otherwise\r\n  //   undoButton.disabled = currentPageChanges.length === 0;\r\n  // }, [changes, currentQuestionIndex]);\r\n\r\n\r\n  function goToNextQuestion() {\r\n    console.log('Hello world!');\r\n    if (currentQuestionIndex === questions.length - 1) {\r\n      return;\r\n    }\r\n    setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n  }\r\n\r\n  function handleSubmit() {\r\n    navigate('/results', { state: { questions } });\r\n    if (location.pathname === '/results') {\r\n      return <Results questions={location.state.questions} />;\r\n    }\r\n  }\r\n\r\n\r\n  function goToPreviousQuestion() {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  }\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n\r\n\r\n  // function handleBox() {\r\n\r\n  //   if (currentQuestion.graded === true) {\r\n  //     return;\r\n  //   }\r\n  //   const selection = window.getSelection();\r\n  //   if (selection.toString().trim() !== '') {\r\n  //     const text = selection.toString();\r\n  //     if (selection.rangeCount > 0) {\r\n  //       const range = selection.getRangeAt(0);\r\n  //       const rect = range.getBoundingClientRect();\r\n\r\n  //       const startRange = document.createRange();\r\n  //       startRange.setStart(range.startContainer, range.startOffset);\r\n  //       startRange.setEnd(range.startContainer, range.startOffset + 1);\r\n  //       const startRect = startRange.getBoundingClientRect();\r\n\r\n  //       const newNode = document.createElement('div');\r\n  //       newNode.style.position = 'absolute';\r\n  //       newNode.style.left = `${startRect.left - 5}px`;\r\n  //       newNode.style.top = `${rect.top}px`;\r\n  //       const width = rect.right - startRect.left;\r\n  //       if (width === rect.width) {\r\n  //         newNode.style.width = `${width + 15}px`;\r\n  //       }\r\n  //       else {\r\n  //         newNode.style.width = `${width + 5}px`;\r\n  //       }\r\n  //       newNode.style.height = `${rect.height}px`;\r\n  //       newNode.style.border = `2px solid ${highlightColor}`;\r\n  //       newNode.style.pointerEvents = 'none';\r\n  //       const questionContainer = document.getElementById('questionContent');\r\n  //       questionContainer.appendChild(newNode);\r\n  //       const prevColor = highlightColor;\r\n\r\n  //       const newChange = { type: 'box', color: prevColor, content: text };\r\n  //       setQuestions(prevQuestions => {\r\n  //         const updatedQuestions = [...prevQuestions];\r\n  //         updatedQuestions[currentQuestionIndex] = {\r\n  //           ...currentQuestion,\r\n  //           changes: currentQuestion.changes ? [...currentQuestion.changes, newChange] : [newChange]\r\n  //         };\r\n  //         questions[currentQuestionIndex]['edited'] = true;\r\n  //         questions[currentQuestionIndex]['render'] = document.getElementById('questionContent').innerHTML;\r\n  //         console.log(document.getElementById('questionContent').innerHTML);\r\n  //         return updatedQuestions;\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  function handleBox() {\r\n    if (currentQuestion.graded === true) {\r\n      return;\r\n    }\r\n    const selection = window.getSelection();\r\n    if (selection.toString().trim() !== '') {\r\n      const text = selection.toString();\r\n      if (selection.rangeCount > 0) {\r\n        const range = selection.getRangeAt(0);\r\n        const rect = range.getBoundingClientRect();\r\n\r\n        const startRange = document.createRange();\r\n        startRange.setStart(range.startContainer, range.startOffset);\r\n        startRange.setEnd(range.startContainer, range.startOffset + 1);\r\n        const startRect = startRange.getBoundingClientRect();\r\n\r\n        const newNode = document.createElement('div');\r\n        newNode.className = 'box';\r\n        newNode.style.position = 'absolute';\r\n\r\n        // Get the parent container\r\n        const container = document.getElementById('questionContent');\r\n        container.style.position = 'relative';\r\n\r\n        // Get the bounding rectangle of the parent container\r\n        const containerRect = container.getBoundingClientRect();\r\n\r\n        // Calculate the position of the box relative to the parent container\r\n        const left = startRect.left - containerRect.left;\r\n        const top = rect.top - containerRect.top;\r\n\r\n        newNode.style.left = `${left - 5}px`;\r\n        newNode.style.top = `${top}px`;\r\n        const width = rect.right - startRect.left;\r\n        if (width === rect.width) {\r\n          newNode.style.width = `${width + 15}px`;\r\n        }\r\n        else {\r\n          newNode.style.width = `${width + 5}px`;\r\n        }\r\n        newNode.style.height = `${rect.height}px`;\r\n        newNode.style.border = `2px solid ${highlightColor}`;\r\n        newNode.style.pointerEvents = 'none';\r\n        const questionContainer = document.getElementById('questionContent');\r\n        questionContainer.appendChild(newNode);\r\n        const prevColor = highlightColor;\r\n\r\n        const newChange = { type: 'box', color: prevColor, content: text };\r\n        setQuestions(prevQuestions => {\r\n          const updatedQuestions = [...prevQuestions];\r\n          updatedQuestions[currentQuestionIndex] = {\r\n            ...currentQuestion,\r\n            changes: currentQuestion.changes ? [...currentQuestion.changes, newChange] : [newChange]\r\n          };\r\n          questions[currentQuestionIndex]['edited'] = true;\r\n          questions[currentQuestionIndex]['render'] = document.getElementById('questionContent').innerHTML;\r\n          console.log(document.getElementById('questionContent').innerHTML);\r\n          return updatedQuestions;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  function handleHighlight() {\r\n    if (currentQuestion.graded === true) {\r\n      return;\r\n    }\r\n    const selection = window.getSelection();\r\n    //const alreadyClicked = currentQuestion.changes && currentQuestion.changes.some(change => change.node.textContent === selection.toString());\r\n\r\n    //if (alreadyClicked) {\r\n    //return;\r\n    //}\r\n\r\n    if (selection.toString().trim() !== '') {\r\n      if (!selection.rangeCount) return;\r\n      const text = selection.toString();\r\n      // const changes = currentQuestion.changes;\r\n      // const alreadyHighlighted = changes.some(change => change.content === selection.toString());\r\n      // if (alreadyHighlighted) {\r\n      //   return;\r\n      // }\r\n\r\n      let range = selection.getRangeAt(0);\r\n      let rangeData = {\r\n        startContainer: range.startContainer,\r\n        startOffset: range.startOffset,\r\n        endContainer: range.endContainer,\r\n        endOffset: range.endOffset\r\n      }\r\n\r\n      let mark = document.createElement('mark');\r\n      mark.style.backgroundColor = highlightColor;\r\n      const prevColor = mark.style.backgroundColor;\r\n      mark.appendChild(range.extractContents());\r\n      range.insertNode(mark);\r\n\r\n      // const newChange = { type: 'highlight', node: mark, range: rangeData, color: prevColor };\r\n      //const newChange = { type: 'highlight', node: mark, range: range, color: prevColor };\r\n      const newChange = { type: 'highlight', color: prevColor, content: text };\r\n\r\n      // Update the currentQuestion with the new change\r\n      setQuestions(prevQuestions => {\r\n        const updatedQuestions = [...prevQuestions];\r\n        updatedQuestions[currentQuestionIndex] = {\r\n          ...currentQuestion,\r\n          changes: currentQuestion.changes ? [...currentQuestion.changes, newChange] : [newChange]\r\n        };\r\n        questions[currentQuestionIndex]['edited'] = true;\r\n        questions[currentQuestionIndex]['render'] = document.getElementById('questionContent').innerHTML;\r\n        console.log(document.getElementById('questionContent').innerHTML);\r\n        return updatedQuestions;\r\n      });\r\n\r\n      // Clear the selection\r\n      if (window.getSelection) {\r\n        if (window.getSelection().empty) {  // Chrome\r\n          window.getSelection().empty();\r\n        } else if (window.getSelection().removeAllRanges) {  // Firefox\r\n          window.getSelection().removeAllRanges();\r\n        }\r\n      } else if (document.selection) {  // IE?\r\n        document.selection.empty();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function handleClickWord(event) {\r\n\r\n    if (currentQuestion.graded === true) {\r\n      return;\r\n    }\r\n\r\n    const selection = window.getSelection();\r\n\r\n    const range = document.caretRangeFromPoint(event.clientX, event.clientY);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    selection.modify('move', 'backward', 'word');\r\n    selection.modify('extend', 'forward', 'word');\r\n    // const changes = currentQuestion.changes;\r\n    // const alreadyClicked = changes.some(change => change.content === selection.toString());\r\n    // if (alreadyClicked) {\r\n    //   return;\r\n    // }\r\n\r\n    if (selection.toString().trim() !== '') {\r\n      const text = selection.toString();\r\n      const span = document.createElement('span');\r\n      span.style.border = `2px solid ${highlightColor}`;\r\n      const prevColor = highlightColor;\r\n      span.appendChild(document.createTextNode(selection.toString()));\r\n      selection.getRangeAt(0).deleteContents();\r\n      selection.getRangeAt(0).insertNode(span);\r\n      //setChanges(prevChanges => [...prevChanges, { type: 'clickWord', node: span, index: currentQuestionIndex }]);\r\n      const newChange = { type: 'clickWord', color: prevColor, content: text };\r\n      setQuestions(prevQuestions => {\r\n        const updatedQuestions = [...prevQuestions];\r\n        updatedQuestions[currentQuestionIndex] = {\r\n          ...currentQuestion,\r\n          changes: currentQuestion.changes ? [...currentQuestion.changes, newChange] : [newChange]\r\n        };\r\n        questions[currentQuestionIndex]['edited'] = true;\r\n        questions[currentQuestionIndex]['render'] = document.getElementById('questionContent').innerHTML;\r\n        console.log(document.getElementById('questionContent').innerHTML);\r\n        return updatedQuestions;\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleClickLine(event) {\r\n    if (currentQuestion.graded === true) {\r\n      return;\r\n    }\r\n    const selection = window.getSelection();\r\n    const range = document.caretRangeFromPoint(event.clientX, event.clientY);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    selection.modify('move', 'backward', 'lineboundary');\r\n    selection.modify('extend', 'forward', 'lineboundary');\r\n\r\n    // const changes = currentQuestion.changes;\r\n    // const alreadyClicked = changes.some(change => change.content === selection.toString());\r\n    // if (alreadyClicked) {\r\n    //   return;\r\n    // }\r\n\r\n    if (selection.toString().trim() !== '') {\r\n      const text = selection.toString();\r\n      const span = document.createElement('span');\r\n      span.style.border = `2px solid ${highlightColor}`;\r\n      const prevColor = highlightColor;\r\n      span.appendChild(document.createTextNode(selection.toString()));\r\n      selection.getRangeAt(0).deleteContents();\r\n      selection.getRangeAt(0).insertNode(span);\r\n      //setChanges(prevChanges => [...prevChanges, { type: 'clickLine', node: span, index: currentQuestionIndex }]);\r\n      const newChange = { type: 'clickLine', color: prevColor, content: text };\r\n      setQuestions(prevQuestions => {\r\n        const updatedQuestions = [...prevQuestions];\r\n        updatedQuestions[currentQuestionIndex] = {\r\n          ...currentQuestion,\r\n          changes: currentQuestion.changes ? [...currentQuestion.changes, newChange] : [newChange]\r\n        };\r\n        questions[currentQuestionIndex]['render'] = document.getElementById('questionContent').innerHTML;\r\n        questions[currentQuestionIndex]['edited'] = true;\r\n        //console.log(document.getElementById('questionContent').innerHTML);\r\n        return updatedQuestions;\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  function handleReset() {\r\n    document.getElementById('questionContent').innerHTML = questions[currentQuestionIndex].content;\r\n    questions[currentQuestionIndex]['render'] = '';\r\n    questions[currentQuestionIndex]['changes'] = [];\r\n    questions[currentQuestionIndex]['edited'] = false;\r\n  }\r\n\r\n\r\n  function showSolution(currentQuestion, questionContent ) {\r\n    questionContent.innerHTML = currentQuestion.solution;\r\n    currentQuestion.showingSolution = true;\r\n  }\r\n\r\n  function showAnswer(currentQuestion, questionContent) {\r\n    questionContent.innerHTML = currentQuestion.studentAnswer;\r\n    currentQuestion.showingSolution = false;\r\n  }\r\n    \r\n\r\n  function handleChange(){\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    const studentAnswer = currentQuestion.studentAnswer;\r\n    const questionContent = document.getElementById('questionContent');\r\n    //const questionContent = document.getElementById('questionContent');\r\n    if (currentQuestion.showingSolution === true){\r\n      showAnswer(currentQuestion, questionContent);\r\n    }\r\n    else{\r\n      showSolution(currentQuestion, questionContent);\r\n    }\r\n  }\r\n  \r\n\r\n  function checkAnswer() {\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    const answers = (currentQuestion.answers || []).map(ans => ans.replace(/[\\s.,!?]/g, ''));\r\n    console.log(answers);\r\n    const changes = currentQuestion.changes;\r\n    console.log(changes);\r\n\r\n    let score = 0;\r\n    changes.forEach(change => {\r\n      console.log(change.content.replace(/[\\s.,!?]/g, ''));\r\n      if (answers.includes(change.content.replace(/[\\s.,!?]/g, ''))) {\r\n        score += 1;\r\n      } else {\r\n        score -= 0.5;\r\n      }\r\n    });\r\n\r\n    currentQuestion.score = score;\r\n    currentQuestion.graded = true;\r\n\r\n    console.log(score);\r\n    currentQuestion.studentAnswer = document.getElementById('questionContent').innerHTML;\r\n    setQuestions(prevQuestions => [...prevQuestions]); // Trigger re-render\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n    {/* // <div style ={{ paddingLeft: '20px',  */}\r\n    {/* // position: 'fixed', \r\n    // width: '100%', \r\n    // height: '100vh', \r\n    // overflow: 'auto' }} > */}\r\n      <div >\r\n        <div>\r\n          <h2 className='question-title'>{currentQuestion.title}</h2>\r\n\r\n          {currentQuestion.edited ? (\r\n            <p id=\"questionContent\" onMouseUp={\r\n              currentQuestion.style === 'highlight' ? handleHighlight :\r\n                currentQuestion.style === 'box' ? handleBox :\r\n                  currentQuestion.style === 'clickword' ? handleClickWord :\r\n                    handleClickLine\r\n            }\r\n              style={{ whiteSpace: 'pre-wrap', fontFamily: 'monospace', }}\r\n              dangerouslySetInnerHTML={{ __html: currentQuestion.render }}\r\n            />\r\n          ) : (\r\n            <p id=\"questionContent\" onMouseUp={\r\n              currentQuestion.style === 'highlight' ? handleHighlight :\r\n                currentQuestion.style === 'box' ? handleBox :\r\n                  currentQuestion.style === 'clickword' ? handleClickWord :\r\n                    handleClickLine\r\n            }\r\n              style={{ whiteSpace: 'pre-wrap', fontFamily: 'monospace', }}\r\n              dangerouslySetInnerHTML={{ __html: currentQuestion.content }}\r\n            />\r\n          )}\r\n        </div>\r\n        <p>Score: {currentQuestion.score}/{currentQuestion.answers.length}</p>\r\n        <div className=\"button-container\" style={{ alignItems: 'left' }}>\r\n          {/* <button className='inreractive-button' onClick={showSolution} disabled={!currentQuestion.graded}>Question/Solution</button> */}\r\n          {/* <button className='inreractive-button' onClick={showSolution} disabled={!currentQuestion.graded}>{currentQuestion.showingSolution ? 'Solution' : 'Question'}</button> */}\r\n        </div>\r\n        <div className=\"interaction-controls\">\r\n          <div style={{ marginTop: 'auto' }}>\r\n          <button className='inreractive-button' onClick={checkAnswer} disabled={currentQuestion.graded} hidden={!currentQuestion.edited||currentQuestion.graded}>Check Answer</button>\r\n          <button className='inreractive-button' onClick={handleChange} hidden={!currentQuestion.graded}>Question/Solution</button>\r\n          </div>\r\n          <div style={{ marginTop: 'auto' }}>\r\n            {/* <button id=\"undoButton\" onClick={handleUndo}>Undo</button> */}\r\n            <button onClick={handleReset} hidden={currentQuestion.graded}>Reset All</button>\r\n          </div>\r\n          <div style={{ marginTop: 'auto' }}>\r\n            <button onClick={goToPreviousQuestion}disabled={currentQuestionIndex===0}>Previous Question</button>\r\n            <button onClick={goToNextQuestion}disabled={currentQuestionIndex===(questions.length-1)}>Next Question</button>\r\n            \r\n          </div>\r\n\r\n          <label className='color-selection'>\r\n            {colors.map((color, index) => (\r\n              <label key={index}>\r\n                <input type=\"radio\" value={color} checked={highlightColor === color} onChange={(e) => setHighlightColor(e.target.value)} />\r\n                <span\r\n                  style={{ backgroundColor: color, display: 'inline-block', width: '20px', height: '20px' }}\r\n                  className={highlightColor === color ? 'selected' : ''}\r\n                ></span>\r\n              </label>\r\n            ))}\r\n          </label>\r\n          {questions.every(question => question.changes && question.changes.length >= 1) && (\r\n        <button onClick={handleSubmit} className=\"submit-button\">Submit</button>\r\n        )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom/client';\r\nexport default function NoPage() {\r\n    return (\r\n        <div>\r\n        <h1>Error 505: No Page Found</h1>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport './Teacher.css';\r\nexport default function Teacher() {\r\n  const [title, setTitle] = useState(localStorage.getItem('title') || '');\r\n  const [content, setContent] = useState(localStorage.getItem('content') || '');\r\n  const [solution, setSolution] = useState(localStorage.getItem('solution') || '');\r\n  const [questions, setQuestions] = useState(JSON.parse(localStorage.getItem('questions')) || []);\r\n  const [answers, setAnswers] = useState(localStorage.getItem('answers')?.split(',') || ['']);\r\n  const [newAnswer, setNewAnswer] = useState('');\r\n  const [newQuestion, setNewQuestion] = useState({ style: '', title: '', content: '', answers:[] , solution: '' , score: '', graded: false, showingSolution: false, changes: [], render: '', studentAnswer: '', edited: false, points: ''});\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n  const [selectedQuestionIndex, setSelectedQuestionIndex] = useState(null);\r\n  const [filename, setFilename] = useState('questions.txt');\r\n\r\n  const handleImport = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      const importedQuestions = JSON.parse(event.target.result);\r\n      const existingQuestions = JSON.parse(localStorage.getItem('questions')) || [];\r\n      const allQuestions = [...existingQuestions, ...importedQuestions];\r\n\r\n      const missingFields = allQuestions.filter(question => {\r\n        return !question.style || !question.title || !question.content || question.answers.length === 0 || !question.solution;\r\n      });\r\n\r\n      console.log(missingFields.length);\r\n\r\n      if (missingFields.length > 0) {\r\n        console.warn('Warning: Some questions in the imported file are missing fields.');\r\n        alert(\"Please make sure all the questions in your file have all fields filled in.\" );\r\n        return\r\n      }\r\n\r\n      setQuestions(allQuestions);\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    handleExport(filename);\r\n  };\r\n\r\n  const handleSaveAs = () => {\r\n    const newFilename = prompt('Enter new filename:');\r\n    if (newFilename) {\r\n      setFilename(newFilename);\r\n      handleExport(newFilename);\r\n    }\r\n  };\r\n\r\n\r\n  const handleExport = (filename) => {\r\n    const exportedQuestions = questions.map(question => {\r\n      const { style, title, content, answers, solution } = question;\r\n      return { style, title, content, answers, solution };\r\n    });\r\n\r\n    const content = JSON.stringify(exportedQuestions);\r\n    const blob = new Blob([content], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    link.click();\r\n\r\n    // Clean up\r\n    URL.revokeObjectURL(url);\r\n    link.remove();\r\n  };\r\n\r\n\r\n  const handleTitleClick = (index) => {\r\n    if (selectedQuestionIndex === index) {\r\n      setSelectedQuestionIndex(null);\r\n    } else {\r\n      setSelectedQuestionIndex(index);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('questions', JSON.stringify(questions));\r\n  }, [questions]);\r\n\r\n\r\n\r\n\r\n  function handleInputChange(e) {\r\n    let value = e.target.value;\r\n    if (e.target.name === 'answers') {\r\n      value = value.split(','); \r\n    }\r\n    setNewQuestion({ ...newQuestion, [e.target.name]: value });\r\n  }\r\n\r\n  const handleAnswerChange = (e, index) => {\r\n    const newAnswers = [...newQuestion.answers];\r\n    newAnswers[index] = e.target.value;\r\n    setNewQuestion({ ...newQuestion, answers: newAnswers });\r\n  };\r\n\r\n\r\n  const handleAddAnswer = () => {\r\n    setNewQuestion({ ...newQuestion, answers: [...newQuestion.answers, ''] });\r\n  };\r\n\r\n  function handleAddQuestion(e) {\r\n    // Filter out any empty answers\r\n    const nonEmptyAnswers = newQuestion.answers.filter(answer => answer.trim() !== '');\r\n\r\n    if (!newQuestion.style || !newQuestion.title || !newQuestion.content || nonEmptyAnswers.length === 0 || !newQuestion.solution) {\r\n      alert(\"Please fill in all the fields before adding a question.\");\r\n      return;\r\n    }\r\n\r\n    let newQuestions = [...questions];\r\n    if (editingIndex !== null) {\r\n      newQuestions.splice(editingIndex, 0, { ...newQuestion, answers: nonEmptyAnswers });\r\n      setQuestions(newQuestions);\r\n      setNewQuestion({ style: '', title: '', content: '', answers: [], solution: ''});\r\n      setEditingIndex(null);\r\n    }\r\n    else {\r\n      setQuestions([...questions, { ...newQuestion, answers: nonEmptyAnswers }]);\r\n    }\r\n    setAnswers([]);\r\n    setNewQuestion({ style: '', title: '', content: '', answers: [], solution: ''});\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('title', title);\r\n    localStorage.setItem('content', content);\r\n    localStorage.setItem('answers', answers);\r\n    localStorage.setItem('solution', solution);\r\n  }, [title, content, answers]);\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (questions.length === 0) {\r\n      alert(\"Please create at least one question before submitting.\");\r\n      return;\r\n    }\r\n    navigate('/student', { state: { title, content, answers, solution } });\r\n  }\r\n\r\n  function handleEditQestion(index) {\r\n    setNewQuestion(questions[index]);\r\n    setQuestions(questions.filter((_, i) => i !== index));\r\n    setEditingIndex(index);\r\n  }\r\n\r\n  function handleDeleteQuestion(index) {\r\n    setQuestions(questions.filter((question, i) => i !== index));\r\n  }\r\n\r\n  function handleDeleteAllQuestions() {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete all questions?\");\r\n    if (confirmDelete) {\r\n      setQuestions([]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ paddingLeft: '20px' }}>\r\n      <h1>Questions</h1>\r\n      {questions.map((question, index) => (\r\n        <div key={index}>\r\n          <h2 onClick={() => handleTitleClick(index)}>{question.title}</h2>\r\n          {selectedQuestionIndex === index && (\r\n            <>\r\n              <p style={{ fontFamily: 'monospace', whiteSpace: 'pre-wrap' }}>{question.content}</p>\r\n              <p>The answers are: {question.answers.join(', ')}</p>\r\n              <p>The style is: {question.style}</p>\r\n              <p>The solution is: {question.solution}</p>\r\n              <button onClick={() => handleDeleteQuestion(index)}>Delete Question</button>\r\n              <button onClick={() => handleEditQestion(index)}>Edit Question</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Preview</button>\r\n      <div>\r\n        <select name=\"style\" value={newQuestion.style} onChange={handleInputChange}>\r\n          <option value=\"\">Select style</option>\r\n          <option value=\"box\">Box</option>\r\n          <option value=\"highlight\">Highlight</option>\r\n          <option value=\"clickword\">Click Word</option>\r\n          <option value=\"clickline\">Click Line</option>\r\n        </select>\r\n        <input name=\"title\" value={newQuestion.title} onChange={handleInputChange} placeholder=\"Title\" />\r\n        <textarea name=\"content\" value={newQuestion.content} onChange={handleInputChange} style={{ whiteSpace: 'pre-wrap' }} placeholder=\"Content\" />\r\n        {newQuestion.answers.map((answer, index) => (\r\n          <div key={index} style={{ display: 'flex', alignItems: 'center' }}>\r\n          <textarea\r\n            style={{ whiteSpace: 'pre-wrap' }}\r\n            key={index}\r\n            name=\"answers\"\r\n            value={answer}\r\n            onChange={(e) => handleAnswerChange(e, index)}\r\n            placeholder=\"New Answer\"\r\n          />\r\n          {!newQuestion.content.includes(answer) && <span style={{ color: 'red' }} title = \"This answer is not contained in the question content.\">❗</span>}\r\n          </div>\r\n        ))}\r\n        <button onClick={handleAddAnswer}>Add another answer</button>\r\n        <textarea name=\"solution\" value={newQuestion.solution} onChange={handleInputChange} style={{ whiteSpace: 'pre-wrap' }} placeholder=\"Solution\" />\r\n        {/* <input name=\"points\" value={newQuestion.points} onChange={handleInputChange} placeholder=\"Points\" /> */}\r\n        <button onClick={handleAddQuestion}>{editingIndex !== null ? 'Update Question' : 'Add Question'}</button>\r\n        <button onClick={handleDeleteAllQuestions}>Delete All Questions</button>\r\n      </div>\r\n      <div>\r\n        <input type=\"file\" onChange={handleImport} />\r\n      </div>\r\n      <div>\r\n        <button onClick={handleSave}>Save</button>\r\n        <button onClick={handleSaveAs}>Save As</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import Home from './Home';\r\nimport Student from './Student';\r\nimport Teacher from './Teacher';\r\nimport React from 'react'\r\n\r\nexport default function Index() {\r\n    return (\r\n        <div>\r\n        <h1>Welcome to my app!</h1>\r\n        <div>\r\n            <h2>Click on one of the links below to go to the page you want to go to</h2>\r\n            <a href=\"http://localhost:3000/student\">Student</a>\r\n            <br></br>\r\n            <a href=\"http://localhost:3000/teacher\">Teacher</a>\r\n            <br></br>\r\n            <a href=\"http://localhost:3000/home\">Home</a>\r\n            <br></br>\r\n            <a href=\"http://localhost:3000/results\">Results</a>\r\n        </div>\r\n        </div>\r\n    );\r\n    }","// app.js\nimport React from 'react'\n// import ReactDOM from 'react-dom'\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Student from './pages/Student';\nimport NoPage from './pages/NoPage';\nimport Index from './pages/Index';\nimport Teacher from './pages/Teacher';\nimport Results from './pages/Results';\n\nexport default function App() {\n  const qeuestions = JSON.parse(localStorage.getItem('questions')) || [];\n  return (\n    <BrowserRouter>\n      <Routes>\n          <Route index element={<Index />} />\n          <Route path=\"*\" element={<NoPage />} />\n          <Route path=\"home\" element={<Home />} />\n          <Route path=\"student\" element={<Student />} />\n          <Route path=\"teacher\" element={<Teacher />} />\n          <Route path=\"results\" element={<Results questions={qeuestions} />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}